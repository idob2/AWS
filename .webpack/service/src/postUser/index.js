(()=>{"use strict";var e={460:function(e,n,o){var t=this&&this.__awaiter||function(e,n,o,t){return new(o||(o=Promise))((function(i,r){function a(e){try{d(t.next(e))}catch(e){r(e)}}function s(e){try{d(t.throw(e))}catch(e){r(e)}}function d(e){var n;e.done?i(e.value):(n=e.value,n instanceof o?n:new o((function(e){e(n)}))).then(a,s)}d((t=t.apply(e,n||[])).next())}))};Object.defineProperty(n,"__esModule",{value:!0}),n.handler=void 0;const i=o(553),r=o(906),a=o(706);n.handler=e=>t(void 0,void 0,void 0,(function*(){try{const n=JSON.parse(e.body||"{}"),o={TableName:i.tableName,Item:{id:n.id,email:n.email,password:n.password,firstName:n.firstName,lastName:n.lastName,birthDate:n.birthDate,phone_number:n.phoneNumber}};yield(0,r.postUser)(o);const t={TableName:o.TableName,Key:{id:o.Item.id}},s=yield(0,r.getUser)(t);s.Item?console.log("Item was inserted:",s.Item):console.log("Item was not found");const d={ClientId:process.env.APP_CLIENT_ID,Username:n.email,Password:n.password,UserAttributes:[{Name:"email",Value:n.email},{Name:"given_name",Value:n.firstName},{Name:"family_name",Value:n.lastName},{Name:"birthdate",Value:n.birthDate},{Name:"phone_number",Value:n.phoneNumber}]};return yield(0,a.signUpUser)(d),{statusCode:201,body:JSON.stringify({id:n.id})}}catch(e){return console.error(e),{statusCode:400,body:JSON.stringify({message:e.message})}}}))},706:function(e,n,o){var t=this&&this.__awaiter||function(e,n,o,t){return new(o||(o=Promise))((function(i,r){function a(e){try{d(t.next(e))}catch(e){r(e)}}function s(e){try{d(t.throw(e))}catch(e){r(e)}}function d(e){var n;e.done?i(e.value):(n=e.value,n instanceof o?n:new o((function(e){e(n)}))).then(a,s)}d((t=t.apply(e,n||[])).next())}))};Object.defineProperty(n,"__esModule",{value:!0}),n.signUpUser=n.confirmUser=n.loginUser=void 0;const i=o(336),r=o(553),a=new i.CognitoIdentityServiceProvider({region:r.secondaryRegion});n.loginUser=e=>t(void 0,void 0,void 0,(function*(){return yield a.initiateAuth(e).promise()})),n.confirmUser=e=>t(void 0,void 0,void 0,(function*(){return yield a.adminConfirmSignUp(e).promise()})),n.signUpUser=e=>t(void 0,void 0,void 0,(function*(){return yield a.signUp(e).promise()}))},906:function(e,n,o){var t=this&&this.__awaiter||function(e,n,o,t){return new(o||(o=Promise))((function(i,r){function a(e){try{d(t.next(e))}catch(e){r(e)}}function s(e){try{d(t.throw(e))}catch(e){r(e)}}function d(e){var n;e.done?i(e.value):(n=e.value,n instanceof o?n:new o((function(e){e(n)}))).then(a,s)}d((t=t.apply(e,n||[])).next())}))};Object.defineProperty(n,"__esModule",{value:!0}),n.getUser=n.updateUser=n.postUser=n.dynamoDb=void 0;const i=o(336),r=o(553);n.dynamoDb=new i.DynamoDB.DocumentClient({region:r.mainRegion}),n.postUser=e=>t(void 0,void 0,void 0,(function*(){return yield n.dynamoDb.put(e).promise()})),n.updateUser=e=>t(void 0,void 0,void 0,(function*(){return yield n.dynamoDb.update(e).promise()})),n.getUser=e=>t(void 0,void 0,void 0,(function*(){return yield n.dynamoDb.get(e).promise()}))},553:(e,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.tableName=n.secondaryRegion=n.mainRegion=n.moveoLambdaRole=void 0,n.moveoLambdaRole="arn:aws:iam::779000067130:role/Moveo-LambdaExecutionRole",n.mainRegion="il-central-1",n.secondaryRegion="eu-west-1",n.tableName="idoBar-users"},336:e=>{e.exports=require("aws-sdk")}},n={},o=function o(t){var i=n[t];if(void 0!==i)return i.exports;var r=n[t]={exports:{}};return e[t].call(r.exports,r,r.exports,o),r.exports}(460),t=exports;for(var i in o)t[i]=o[i];o.__esModule&&Object.defineProperty(t,"__esModule",{value:!0})})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,