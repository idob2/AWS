(()=>{"use strict";var e={954:function(e,o,n){var i=this&&this.__awaiter||function(e,o,n,i){return new(n||(n=Promise))((function(r,t){function s(e){try{c(i.next(e))}catch(e){t(e)}}function a(e){try{c(i.throw(e))}catch(e){t(e)}}function c(e){var o;e.done?r(e.value):(o=e.value,o instanceof n?o:new n((function(e){e(o)}))).then(s,a)}c((i=i.apply(e,o||[])).next())}))};Object.defineProperty(o,"__esModule",{value:!0}),o.handler=void 0;const r=n(706);o.handler=e=>i(void 0,void 0,void 0,(function*(){try{const o=JSON.parse(e.body),{email:n,confirmationCode:i}=o,t={UserPoolId:process.env.USER_POOL_ID,Username:n};return yield(0,r.confirmUser)(t),{statusCode:200,body:JSON.stringify({message:"User confirmed successfully"})}}catch(e){return console.error("Error confirming user:",e),{statusCode:400,body:JSON.stringify({message:e.message})}}}))},706:function(e,o,n){var i=this&&this.__awaiter||function(e,o,n,i){return new(n||(n=Promise))((function(r,t){function s(e){try{c(i.next(e))}catch(e){t(e)}}function a(e){try{c(i.throw(e))}catch(e){t(e)}}function c(e){var o;e.done?r(e.value):(o=e.value,o instanceof n?o:new n((function(e){e(o)}))).then(s,a)}c((i=i.apply(e,o||[])).next())}))};Object.defineProperty(o,"__esModule",{value:!0}),o.signUpUser=o.confirmUser=o.loginUser=void 0;const r=n(336),t=n(553),s=new r.CognitoIdentityServiceProvider({region:t.secondaryRegion});o.loginUser=e=>i(void 0,void 0,void 0,(function*(){return yield s.initiateAuth(e).promise()})),o.confirmUser=e=>i(void 0,void 0,void 0,(function*(){yield s.adminConfirmSignUp(e).promise()})),o.signUpUser=e=>i(void 0,void 0,void 0,(function*(){yield s.signUp(e).promise()}))},553:(e,o)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.tableName=o.secondaryRegion=o.mainRegion=o.moveoLambdaRole=void 0,o.moveoLambdaRole="arn:aws:iam::779000067130:role/Moveo-LambdaExecutionRole",o.mainRegion="il-central-1",o.secondaryRegion="eu-west-1",o.tableName="idoBar-users"},336:e=>{e.exports=require("aws-sdk")}},o={},n=function n(i){var r=o[i];if(void 0!==r)return r.exports;var t=o[i]={exports:{}};return e[i].call(t.exports,t,t.exports,n),t.exports}(954),i=exports;for(var r in n)i[r]=n[r];n.__esModule&&Object.defineProperty(i,"__esModule",{value:!0})})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,